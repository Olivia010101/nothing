name: download_proxies

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  # push:
    # branches: [ "master" ]
  # pull_request:
    # branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: '0 9,21 * * *'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    # - name: cache
      # uses: actions/cache@v3
      # with:
        # path: ~/.cache/pip
        # key: ${{ runner.os }}-pip-${{ hashFiles('**/run_in_Actions/requirements.txt') }}
        # restore-keys: |
          # ${{ runner.os }}-pip-

    - name: Timezone
      run: sudo timedatectl set-timezone 'Asia/Shanghai'

    - name: requirements
      run: pip install -r ./clash/requirements.txt


    # sign netease
    - name: download_proxies_from_url
      run: python ./clash/proxyPool.py --download --file ./clash/config.yaml --config ./clash/default.config --urlfile ./clash/source.url --nopush
    - name: 提交抓取
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git pull origin main
        git add clash
        git commit -m "$(date '+%Y-%m-%d %H:%M:%S') 抓取节点"
    - name: 推送抓取
      uses: ad-m/github-push-action@master
      with:
        branch: main

    - name: download_mihomo
      run: wget https://github.com/MetaCubeX/mihomo/releases/download/v1.19.0/mihomo-linux-amd64-compatible-go120-v1.19.0.gz

    - name: extract_mihomo
      run: gzip -d mihomo-linux-amd64-compatible-go120-v1.19.0.gz

    - name: add_execuable
      run: |
        mv mihomo-linux-amd64-compatible-go120-v1.19.0 mihomo
        chmod +x mihomo

    - name: test_with_lite
      run: |
        chmod +x ./clash/lite
        ./clash/lite --config ./clash/lite-pingonly.json --test ./clash/config.yaml
        ./clash/lite --config ./clash/lite-speed.json --test ./output.txt
        cp output.txt ./clash/all_nodes.txt
        base64 output.txt -w 0 > ./clash/base64_all_nodes.txt
        ./clash/lite --config ./clash/config.json --test ./output.txt
        ./clash/lite --config ./clash/config.json --test ./output.txt
        cp output.txt ./clash/speed_nodes.txt
        base64 output.txt -w 0 > ./clash/base64_speed_nodes.txt
      # - name: retest_with_lite
      #   run: ./lite --config ./proxypool/lite-pingonly.json --test ./output.txt && ./proxypool/lite --config ./proxypool/lite-speedonly.json --test ./output.txt

      #   # - name: push_output.txt
      #   #   run: mv output.txt ./ && python ./proxypool/autoPush.py
    - name: 提交lite筛选
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git pull origin main
        # mv output.txt ./nodes.txt
        git add clash
        git commit -m "$(date '+%Y-%m-%d %H:%M:%S') 抓取节点"
    - name: 推送lite筛选
      uses: ad-m/github-push-action@master
      with:
        branch: main

    - name: download_proxies_from_local_url
      run: |
        sleep 10
        python ./clash/proxyPool.py --download --file ./clash/config.yaml --config ./clash/default.config --urlfile ./clash/source.url.local --nopush

    - name: run_mihomo
      run: nohup ./mihomo -f ./clash/config.yaml > ./clash/mihomo.log 2>&1 &

    - name: test_delay
      run: |
        python ./clash/proxyPool.py --delay --file ./clash/config.yaml --config ./clash/default.config --port 17790 --max 300 --timeout 1000 --nopush --testurl https://cp.cloudflare.com/generate_204
        ./clash/lite --config ./clash/config.json --test ./clash/config.yaml
        cp output.txt ./clash/retest_nodes.txt
        base64 output.txt -w 0 > ./clash/retest_base64.txt
    - name: filt_by_type
      run: |
        cat ./clash/retest_nodes.txt | grep -E 'ss://' | grep -v 'vmess://' > ./clash/retest_ss.txt
        base64 ./clash/retest_ss.txt -w 0 > ./clash/base64_ss.txt
        cat ./clash/retest_nodes.txt | grep -E 'trojan://' > ./clash/retest_trojan.txt
        base64 ./clash/retest_trojan.txt -w 0 > ./clash/base64_trojan.txt
        cat ./clash/retest_nodes.txt | grep -E 'vmess://' > ./clash/retest_vmess.txt
        base64 ./clash/retest_vmess.txt -w 0 > ./clash/base64_vmess.txt
        cat ./clash/retest_nodes.txt | grep -E 'ssr://' > ./clash/retest_ssr.txt
        base64 ./clash/retest_ssr.txt -w 0 > ./clash/base64_ssr.txt
    - name: 提交base64文件
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git pull origin main
        git add clash
        git commit -m "$(date '+%Y-%m-%d %H:%M:%S') 测速"
    - name: 推送base64文件
      uses: ad-m/github-push-action@master
      with:
        branch: main
        # kill $!
    - name: retest_mihomo
      run: |
        killall mihomo
        nohup ./mihomo -f ./clash/config.yaml > ./clash/mihomo.log 2>&1 &
        python ./clash/proxyPool.py --delay --file ./clash/config.yaml --config ./clash/default.config --port 17790 --max 100 --timeout 1000 --nopush --testurl https://www.youtube.com/generate_204

    - name: 提交测速
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git pull origin main
        git add clash
        git commit -m "$(date '+%Y-%m-%d %H:%M:%S') 测速"
    - name: 推送更改
      uses: ad-m/github-push-action@master
      with:
        branch: main
